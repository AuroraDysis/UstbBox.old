<Page
    x:Class="UstbBox.App.Views.Settings.CredentialPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UstbBox.App.Views.Settings"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Template10.Controls"
    xmlns:settings="using:UstbBox.App.ViewModels.Settings"
    xmlns:models="using:UstbBox.App.ViewModels.Models"
    mc:Ignorable="d">
    <Page.DataContext>
        <settings:CredentialPageViewModel x:Name="ViewModel"/>
    </Page.DataContext>
    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PageHeader.PrimaryCommandsVisibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  header  -->
        <controls:PageHeader x:Name="PageHeader" Content="账号管理"
                             Frame="{x:Bind Frame}"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True">
            <controls:PageHeader.PrimaryCommands>
                <AppBarButton Label="添加" Icon="Add" Command="{x:Bind ViewModel.CommandAdd}"/>
                <AppBarButton Label="编辑" Icon="Edit" Command="{x:Bind ViewModel.CommandEdit}" x:Name="EditButton1" CommandParameter="{x:Bind ListView.SelectedItems}" IsEnabled="False"/>
                <AppBarToggleButton Label="选择" Icon="Bullets" Click="{x:Bind ViewModel.ChangeSelectionMode}"/>
                <AppBarButton Label="删除" IsEnabled="False" x:Name="DeleteButton1" Icon="Delete" Command="{x:Bind ViewModel.CommandDelete}" CommandParameter="{x:Bind ListView.SelectedItems}"/>
                <AppBarButton Label="刷新" Icon="Refresh" Command="{x:Bind ViewModel.CommandRefresh}"/>
            </controls:PageHeader.PrimaryCommands>
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton Label="添加" Icon="Add" Command="{x:Bind ViewModel.CommandAdd}"/>
                <AppBarButton Label="编辑" Icon="Edit" Command="{x:Bind ViewModel.CommandEdit}" x:Name="EditButton2" CommandParameter="{x:Bind ListView.SelectedItems}" IsEnabled="False"/>
                <AppBarToggleButton Label="选择" Icon="Bullets" Click="{x:Bind ViewModel.ChangeSelectionMode}"/>
                <AppBarButton Label="删除" IsEnabled="False" x:Name="DeleteButton2" Icon="Delete" Command="{x:Bind ViewModel.CommandDelete}" CommandParameter="{x:Bind ListView.SelectedItems}"/>
                <AppBarButton Label="刷新" Icon="Refresh" Command="{x:Bind ViewModel.CommandRefresh}"/>
            </controls:PageHeader.SecondaryCommands>
        </controls:PageHeader>
        <!--  content  -->
        <ScrollViewer Padding="12,8,0,0" VerticalScrollBarVisibility="Auto" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.Below="PageHeader">
            <ListView x:Name="ListView" ItemsSource="{x:Bind ViewModel.Credentials, Mode=OneWay}" 
                      SelectionChanged="ListViewSelectionChanged"
                      SelectionMode="{x:Bind ViewModel.SelectionMode.Value, Mode=TwoWay}">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="models:CredentialViewModel">
                        <Grid Margin="0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <SymbolIcon Symbol="Contact" Height="48" Width="48"/>
                            <StackPanel Grid.Column="1" Margin="6 0 0 0">
                                <TextBlock Text="{x:Bind Kind.Name}" FontWeight="SemiBold" FontSize="18" Margin="3"/>
                                <TextBlock Text="{x:Bind Credential.UserName}" FontWeight="SemiBold" FontSize="18" Margin="3"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </ScrollViewer>
    </RelativePanel>
</Page>
